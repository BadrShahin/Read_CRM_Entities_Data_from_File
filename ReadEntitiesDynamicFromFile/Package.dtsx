<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="4/21/2021 11:19:30 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BADR-SHAHIN"
  DTS:CreatorName="OTVENTURES\Badr.Shahin"
  DTS:DTSID="{8570B07C-90D0-4BF9-B5ED-031E13AB15B1}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.150"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="156"
  DTS:VersionGUID="{DF571A32-6D4F-465A-B129-14AA500A7B7B}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{3A6D4180-8B64-4B6E-9A75-B147C4167FC2}"
      DTS:ObjectName="BADR-SHAHIN.CRM_DB.sa">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=BADR-SHAHIN;User ID=sa;Initial Catalog=CRM_DB;Provider=SQLNCLI11.1;Persist Security Info=True;Auto Translate=False;">
          <DTS:Password
            DTS:Name="Password"
            Sensitive="1"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAz9nmW5OgcUGQMQfxlNQhzAAAAAAIAAAARABUAFMAAAADZgAAwAAAABAAAAALmze5zKOS7/Bxc1S8rVycAAAAAASAAACgAAAAEAAAAPsh6WBZe2v4JvAiCZGqRFcgAAAA1rI959qNcuDeDnUhH/JQ1/8m5SbqZO14lgTwGfPuavMUAAAACz2A5x+F9Fkky6l0IdEJnlXndDo</DTS:Password>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[EntitiesConnection]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{C66A6C7A-F0F1-4D72-A213-B288FDFFDCDD}"
      DTS:ObjectName="EntitiesConnection">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1033"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1252"
          DTS:ConnectionString="D:\Projects\SSIS\ReadEntitiesDynamicFromFile\Entities and Attributes.txt">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="EntityName"
              DTS:DTSID="{02F556E4-6254-4695-8927-5FA781218544}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="EntityField"
              DTS:DTSID="{DBF9D304-91F4-46E7-B1A8-F604E6F46B68}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="EntityFieldType"
              DTS:DTSID="{2FA663C4-FD96-4667-ADE5-B741C1F1BE4F}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F56D6B89-1927-49EE-B95B-618A56FAA183}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="orgURL">
      <DTS:VariableValue
        DTS:DataType="8">http://ld365modondqc-n.cloudapp.net/Modon/XRMServices/2011/Organization.svc</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{3F04AB15-9B56-444B-85E0-D6601F87C105}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="password">
      <DTS:VariableValue
        DTS:DataType="8">linkP@ss</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B3D9A2B6-5097-47C9-ADD5-1E4CA6BCD882}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="userName">
      <DTS:VariableValue
        DTS:DataType="8">crm365dc\crmadmin</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Export CRM Data"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{124D4D9B-60DD-4256-B29A-3C4C68E0E04B}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Export CRM Data"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Export CRM Data\Check whether the contract submission exists or not"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check whether the contract submission exists or not"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [Contract Submission]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [Contract Submission]) [refTable]
where [refTable].[RequestNumber] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="RequestNumber" dataType="DT_STR" length="1500" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="Contract" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CreatedOn" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IndustrialCity" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="InvestmentAmount" dataType="DT_CY" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsPaymentDone" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IsSubmitted" dataType="DT_BOOL" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ProductMainFamily" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RejectionReason" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RequestStatus" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TotalManpower" dataType="DT_WSTR" length="50" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="TotalRequestedArea" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestNumber]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export CRM Data\Check whether the contract submission exists or not.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Export CRM Data\Check whether the contract submission exists or not.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Export CRM Data\Check whether the contract submission exists or not.Inputs[Lookup Input].Columns[RequestNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1500"
                      cachedName="RequestNumber"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestNumber]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">RequestNumber</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Export CRM Data\Check whether the contract submission exists or not.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Match Output].Columns[RequestNumber]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="1500"
                      lineageId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Match Output].Columns[RequestNumber]"
                      name="RequestNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">RequestNumber</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Export CRM Data\Check whether the contract submission exists or not.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Export CRM Data\Check whether the contract submission exists or not.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Export CRM Data\Check whether the edit contract request exists or not"
              componentClassID="Microsoft.Lookup"
              contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
              description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
              name="Check whether the edit contract request exists or not"
              usesDispositions="true"
              version="6">
              <properties>
                <property
                  dataType="System.String"
                  description="Specifies the SQL statement that generates the lookup table."
                  expressionType="Notify"
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[EditContractRequest]</property>
                <property
                  dataType="System.String"
                  description="Specifies a SQL statement that uses parameters to generate the lookup table."
                  expressionType="Notify"
                  name="SqlCommandParam"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[EditContractRequest]) [refTable]
where [refTable].[ContractNumber] = ? and [refTable].[CR] = ? and [refTable].[IndustrialCity] = ? and [refTable].[RequestStatus] = ?</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the type of connection used to access the reference dataset."
                  name="ConnectionType"
                  typeConverter="LookupConnectionType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the cache type of the lookup table."
                  name="CacheType"
                  typeConverter="CacheType">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                  name="NoMatchBehavior"
                  typeConverter="LookupNoMatchBehavior">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                  name="NoMatchCachePercentage">0</property>
                <property
                  dataType="System.Int32"
                  description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                  name="MaxMemoryUsage">25</property>
                <property
                  dataType="System.Int64"
                  description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                  name="MaxMemoryUsage64">25</property>
                <property
                  dataType="System.String"
                  description="Indicates whether to reference metadata in an XML format."
                  name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="RequestNumber" dataType="DT_STR" length="1500" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="ContractNumber" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="CR" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="IndustrialCity" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RequestStatus" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="RequestType" dataType="DT_WSTR" length="1500" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                <property
                  containsID="true"
                  dataType="System.String"
                  description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                  name="ParameterMap">#{Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[ContractNumber]};#{Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[CR]};#{Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[IndustrialCity]};#{Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestStatus]};</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                  name="TreatDuplicateKeysAsError">false</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  description="Connection manager used to access lookup data."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input]"
                  name="Lookup Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input].Columns[ContractNumber]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="ContractNumber"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[ContractNumber]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">ContractNumber</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input].Columns[CR]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="CR"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[CR]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">CR</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input].Columns[IndustrialCity]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="IndustrialCity"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[IndustrialCity]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">IndustrialCity</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input].Columns[RequestStatus]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="RequestStatus"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestStatus]">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table that a column joins."
                          name="JoinToReferenceColumn">RequestStatus</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn" />
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output]"
                  errorOrTruncationOperation="Lookup"
                  exclusionGroup="1"
                  name="Lookup Match Output"
                  synchronousInputId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[RequestNumber]"
                      codePage="1252"
                      dataType="str"
                      errorOrTruncationOperation="Copy Column"
                      length="1500"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[RequestNumber]"
                      name="RequestNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">RequestNumber</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[ContractNumber]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="1500"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[ContractNumber]"
                      name="ContractNumber"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">ContractNumber</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[CR]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="1500"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[CR]"
                      name="CR"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">CR</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[IndustrialCity]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="1500"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[IndustrialCity]"
                      name="IndustrialCity"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">IndustrialCity</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[RequestStatus]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="1500"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[RequestStatus]"
                      name="RequestStatus"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">RequestStatus</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[RequestType]"
                      dataType="wstr"
                      errorOrTruncationOperation="Copy Column"
                      length="1500"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Match Output].Columns[RequestType]"
                      name="RequestType"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.String"
                          description="Specifies the column in the reference table from which a column is copied."
                          name="CopyFromReferenceColumn">RequestType</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup No Match Output]"
                  description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                  exclusionGroup="1"
                  name="Lookup No Match Output"
                  synchronousInputId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Lookup Error Output"
                  synchronousInputId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Export CRM Data\Contract Submission Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Contract Submission Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[Contract Submission]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">3</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">true</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export CRM Data\Contract Submission Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[RequestNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1500"
                      cachedName="RequestNumber"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestNumber]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestNumber]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[Contract]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="Contract"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[Contract]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[Contract]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[CreatedOn]"
                      cachedDataType="date"
                      cachedName="CreatedOn"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[CreatedOn]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[IndustrialCity]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="IndustrialCity"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[IndustrialCity]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IndustrialCity]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[InvestmentAmount]"
                      cachedDataType="cy"
                      cachedName="InvestmentAmount"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[InvestmentAmount]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[InvestmentAmount]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[IsPaymentDone]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="IsPaymentDone"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[IsPaymentDone]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IsPaymentDone]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[IsSubmitted]"
                      cachedDataType="bool"
                      cachedName="IsSubmitted"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[IsSubmitted]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IsSubmitted]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[ProductMainFamily]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="ProductMainFamily"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[ProductMainFamily]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[ProductMainFamily]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[RejectionReason]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="RejectionReason"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[RejectionReason]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RejectionReason]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[RequestStatus]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="RequestStatus"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestStatus]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestStatus]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[TotalManpower]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="TotalManpower"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[TotalManpower]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[TotalManpower]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].Columns[TotalRequestedArea]"
                      cachedDataType="i4"
                      cachedName="TotalRequestedArea"
                      externalMetadataColumnId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[TotalRequestedArea]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[TotalRequestedArea]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestNumber]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      name="RequestNumber" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[Contract]"
                      dataType="wstr"
                      length="1500"
                      name="Contract" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[CreatedOn]"
                      dataType="dbTimeStamp"
                      name="CreatedOn" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[IndustrialCity]"
                      dataType="wstr"
                      length="1500"
                      name="IndustrialCity" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[InvestmentAmount]"
                      dataType="cy"
                      name="InvestmentAmount" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[IsPaymentDone]"
                      dataType="wstr"
                      length="1500"
                      name="IsPaymentDone" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[IsSubmitted]"
                      dataType="bool"
                      name="IsSubmitted" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[ProductMainFamily]"
                      dataType="wstr"
                      length="1500"
                      name="ProductMainFamily" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[RejectionReason]"
                      dataType="wstr"
                      length="1500"
                      name="RejectionReason" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestStatus]"
                      dataType="wstr"
                      length="1500"
                      name="RequestStatus" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[TotalManpower]"
                      dataType="wstr"
                      length="1500"
                      name="TotalManpower" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input].ExternalColumns[TotalRequestedArea]"
                      dataType="i4"
                      name="TotalRequestedArea" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Export CRM Data\Contract Submission Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Contract Submission Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Export CRM Data\Contract Submission Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Contract Submission Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Export CRM Data\Edit Contract Request Table"
              componentClassID="Microsoft.OLEDBDestination"
              contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="OLE DB Destination"
              name="Edit Contract Request Table"
              usesDispositions="true"
              version="4">
              <properties>
                <property
                  dataType="System.Int32"
                  description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                  name="CommandTimeout">0</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the database object used to open a rowset."
                  name="OpenRowset">[dbo].[EditContractRequest]</property>
                <property
                  dataType="System.String"
                  description="Specifies the variable that contains the name of the database object used to open a rowset."
                  name="OpenRowsetVariable"></property>
                <property
                  dataType="System.String"
                  description="The SQL command to be executed."
                  name="SqlCommand"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies the column code page to use when code page information is unavailable from the data source."
                  name="DefaultCodePage">1252</property>
                <property
                  dataType="System.Boolean"
                  description="Forces the use of the DefaultCodePage property value when describing character data."
                  name="AlwaysUseDefaultCodePage">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the mode used to access the database."
                  name="AccessMode"
                  typeConverter="AccessMode">0</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepIdentity">false</property>
                <property
                  dataType="System.Boolean"
                  description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                  name="FastLoadKeepNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                  name="FastLoadOptions"></property>
                <property
                  dataType="System.Int32"
                  description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                  name="FastLoadMaxInsertCommitSize">2147483647</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export CRM Data\Edit Contract Request Table.Connections[OleDbConnection]"
                  connectionManagerID="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  connectionManagerRefId="Package.ConnectionManagers[BADR-SHAHIN.CRM_DB.sa]"
                  description="The OLE DB runtime connection used to access the database."
                  name="OleDbConnection" />
              </connections>
              <inputs>
                <input
                  refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="OLE DB Destination Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].Columns[RequestNumber]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="1500"
                      cachedName="RequestNumber"
                      externalMetadataColumnId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestNumber]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestNumber]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].Columns[ContractNumber]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="ContractNumber"
                      externalMetadataColumnId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[ContractNumber]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[ContractNumber]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].Columns[CR]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="CR"
                      externalMetadataColumnId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[CR]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[CR]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].Columns[IndustrialCity]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="IndustrialCity"
                      externalMetadataColumnId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[IndustrialCity]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[IndustrialCity]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].Columns[RequestStatus]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="RequestStatus"
                      externalMetadataColumnId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestStatus]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestStatus]" />
                    <inputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].Columns[RequestType]"
                      cachedDataType="wstr"
                      cachedLength="1500"
                      cachedName="RequestType"
                      externalMetadataColumnId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestType]"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestType]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestNumber]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      name="RequestNumber" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[ContractNumber]"
                      dataType="wstr"
                      length="1500"
                      name="ContractNumber" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[CR]"
                      dataType="wstr"
                      length="1500"
                      name="CR" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[IndustrialCity]"
                      dataType="wstr"
                      length="1500"
                      name="IndustrialCity" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestStatus]"
                      dataType="wstr"
                      length="1500"
                      name="RequestStatus" />
                    <externalMetadataColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input].ExternalColumns[RequestType]"
                      dataType="wstr"
                      length="1500"
                      name="RequestType" />
                  </externalMetadataColumns>
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Export CRM Data\Edit Contract Request Table.Outputs[OLE DB Destination Error Output]"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="OLE DB Destination Error Output"
                  synchronousInputId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Edit Contract Request Table.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Export CRM Data\Edit Contract Request Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Edit Contract Request Table.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Export CRM Data\Get Data from CRM"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;12"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Get Data from CRM"
              version="12">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="33">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_8892b78662054fc0b9e8c086083c50ca")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_8892b78662054fc0b9e8c086083c50ca")]
[assembly: AssemblyCopyright("Copyright @  2021")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;


using System.IO;
using System.Linq;
using System.Windows.Forms;

using System.Net;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Client;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Query;
using System.ServiceModel.Description;
using System.Collections.Generic;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    private StreamReader SR;
    private string EntitiesFileConnection;

    private List<string> EntitiesNameList;
    private List<string> EntityAttributesList;


    IOrganizationService organizationService = null;


    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion


    public override void AcquireConnections(object Transaction)
    {
        // Get the EntitiesFileConn connection, store it as 'EntitiesFileConnection'
        IDTSConnectionManager100 CM = this.Connections.EntitiesFileConn;
        EntitiesFileConnection = (string)CM.AcquireConnection(null);
    }
    
    public override void PreExecute()
    {
        base.PreExecute();

        // Create a reader for EntitiesFileConnection
        SR = new StreamReader(EntitiesFileConnection);

        ConnectCRMUsingOrgSer();
    }
    
    public override void PostExecute()
    {
        base.PostExecute();

        // Close the reader
        SR.Close();
    }

    public override void CreateNewOutputRows()
    {
        // Declare variables
        string nextLine;
        string[] columns;
        char[] delimiters;

        // Set the delimiter
        delimiters = ",".ToCharArray();

        // Read the first line (header)
        nextLine = SR.ReadLine();

        // Split the line into columns
        columns = nextLine.Split(delimiters);

        // Read the second line and loop until the end of the file
        nextLine = SR.ReadLine();

        EntitiesNameList = new List<string>();
        EntityAttributesList = new List<string>();

        while (nextLine != null)
        {
            // Split the line into columns
            columns = nextLine.Split(delimiters);

            if (columns[0] != null && columns[0] != "")
            {
                if (!EntitiesNameList.Contains(columns[0]))
                {
                    EntitiesNameList.Add(columns[0].ToString());

                    if (EntityAttributesList.Count != 0)
                    {
                        string entity = GetPreviousEntity(EntitiesNameList, EntitiesNameList.Last());

                        RetriveEntityData(organizationService, entity, EntityAttributesList);
                    }

                    // clear entity attrribute list
                    EntityAttributesList.Clear();
                }

                if (columns[1] != null && columns[1] != "")
                {
                    if (!EntityAttributesList.Contains(columns[1]))
                    {
                        EntityAttributesList.Add(columns[1].ToString());
                    }
                }

            }
            
            // Read the next line
            nextLine = SR.ReadLine();
        }

        // Get the last entity in the EntitiesName list 
        if (EntityAttributesList.Count != 0)
        {
            RetriveEntityData(organizationService, EntitiesNameList.Last(), EntityAttributesList);

            // clear entity attrribute list
            EntityAttributesList.Clear();
        }

    }

    // Get previous entity name from EntitiesName list 
    private static T GetPreviousEntity<T>(IEnumerable<T> list, T current)
    {
        try
        {
            return list.TakeWhile(x => !x.Equals(current)).Last();
        }
        catch
        {
            return default(T);
        }
    }

    // Establish CRM connection
    public IOrganizationService ConnectCRMUsingOrgSer()
    {
        string url = Variables.orgURL;
        try
        {
            ClientCredentials clientCredentials = new ClientCredentials();
            clientCredentials.UserName.UserName = Variables.userName;
            clientCredentials.UserName.Password = Variables.password;

            // For Dynamics 365 Customer Engagement V9.X, set Security Protocol as TLS12
            ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

            organizationService = (IOrganizationService)new OrganizationServiceProxy(new Uri(url), null, clientCredentials, null);

            if (organizationService != null)
            {
                // Get Logged in user id 
                Guid userid = ((WhoAmIResponse)organizationService.Execute(new WhoAmIRequest())).UserId;

                if (userid != Guid.Empty)
                {
                    MessageBox.Show("Connection Established Successfully...");
                }
            }
            else
            {
                MessageBox.Show("Failed to Established Connection!!!");
            }
        }
        catch (Exception ex)
        {
            MessageBox.Show("Exception caught - " + ex.Message);
        }
        return organizationService;
    }


    // Retrive Entity Data 
    public void RetriveEntityData(IOrganizationService service, string entityName, List<string> entityAttributes)
    {
        QueryExpression query = new QueryExpression(entityName);
        
        if (entityName == "ldv_editcontract")
        {
            foreach (var attribute in entityAttributes)
            {
                query.ColumnSet.AddColumns(attribute);
            }

            EntityCollection entityCollection = service.RetrieveMultiple(query);

            foreach (var entity in entityCollection.Entities)
            {
                EditContractRequestBuffer.AddRow();

                if (entity.Attributes.Contains("ldv_name")) 
                    EditContractRequestBuffer.RequestNumber = entity.GetAttributeValue<string>("ldv_name");

                if (entity.Attributes.Contains("ldv_contractnumber"))
                    EditContractRequestBuffer.ContractNumber = entity.GetAttributeValue<EntityReference>("ldv_contractnumber").Name;

                if (entity.Attributes.Contains("ldv_cr"))
                    EditContractRequestBuffer.CR = entity.GetAttributeValue<EntityReference>("ldv_cr").Name;

                if (entity.Attributes.Contains("ldv_industrialcity"))
                    EditContractRequestBuffer.IndustrialCity = entity.GetAttributeValue<EntityReference>("ldv_industrialcity").Name;

                if (entity.Attributes.Contains("ldv_requeststatus"))
                    EditContractRequestBuffer.RequestStatus = entity.GetAttributeValue<EntityReference>("ldv_requeststatus").Name;

                if (entity.Attributes.Contains("ldv_requesttype"))
                    EditContractRequestBuffer.RequestType = entity.FormattedValues["ldv_requesttype"].ToString();

            }
        }
        else if (entityName == "ldv_contractsubmission")
        {
            foreach (var attribute in entityAttributes)
            {
                query.ColumnSet.AddColumns(attribute);
            }

            EntityCollection entityCollection = service.RetrieveMultiple(query);

            foreach (var entity in entityCollection.Entities)
            {
                ContractSubmissionBuffer.AddRow();

                if (entity.Attributes.Contains("ldv_name"))
                    ContractSubmissionBuffer.RequestNumber = entity.GetAttributeValue<string>("ldv_name");

                if (entity.Attributes.Contains("createdon"))
                    ContractSubmissionBuffer.CreatedOn = (DateTime)entity.Attributes["createdon"];

                if (entity.Attributes.Contains("ldv_contract"))
                    ContractSubmissionBuffer.Contract = entity.GetAttributeValue<EntityReference>("ldv_contract").Name;

                if (entity.Attributes.Contains("ldv_requeststatus"))
                    ContractSubmissionBuffer.RequestStatus = entity.GetAttributeValue<EntityReference>("ldv_requeststatus").Name;

                if (entity.Attributes.Contains("ldv_industrialcity"))
                    ContractSubmissionBuffer.IndustrialCity = entity.GetAttributeValue<EntityReference>("ldv_industrialcity").Name;

                if (entity.Attributes.Contains("ldv_productmainfamily"))
                    ContractSubmissionBuffer.ProductMainFamily = entity.GetAttributeValue<EntityReference>("ldv_productmainfamily").Name;

                if (entity.Attributes.Contains("ldv_rejectionreasonid"))
                    ContractSubmissionBuffer.RejectionReason = entity.GetAttributeValue<EntityReference>("ldv_rejectionreasonid").Name;

                if (entity.Attributes.Contains("ldv_totalmanpower"))
                    ContractSubmissionBuffer.TotalManpower = entity.GetAttributeValue<string>("ldv_totalmanpower");

                if (entity.Attributes.Contains("ldv_ispaymentdone"))
                    ContractSubmissionBuffer.IsPaymentDone = entity.GetAttributeValue<OptionSetValue>("ldv_ispaymentdone").Value.ToString();

                if (entity.Attributes.Contains("ldv_issubmitted"))
                    ContractSubmissionBuffer.IsSubmitted = entity.GetAttributeValue<Boolean>("ldv_issubmitted");

                if (entity.Attributes.Contains("ldv_totalrequestedarea"))
                    ContractSubmissionBuffer.TotalRequestedArea = entity.GetAttributeValue<int>("ldv_totalrequestedarea");

                if (entity.Attributes.Contains("ldv_investmentamount"))
                    ContractSubmissionBuffer.InvestmentAmount = Convert.ToDecimal(entity.GetAttributeValue<Money>("ldv_investmentamount").Value);

            }
        }
        else if (entityName == "incident")
        {
            foreach (var attribute in entityAttributes)
            {
                query.ColumnSet.AddColumns(attribute);
            }

            EntityCollection entityCollection = service.RetrieveMultiple(query);

            foreach (var entity in entityCollection.Entities)
            {
                IncidentsBuffer.AddRow();

                if (entity.Attributes.Contains("ticketnumber"))
                    IncidentsBuffer.TicketNumber = entity.GetAttributeValue<string>("ticketnumber");

                if (entity.Attributes.Contains("title"))
                    IncidentsBuffer.Title = entity.GetAttributeValue<string>("title");
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class ContractBuffer: ScriptBuffer

{
    public ContractBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String title
    {
        set
        {
            this[0] = value;
        }
    }
    public bool title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime createdon
    {
        set
        {
            this[1] = value;
        }
    }
    public bool createdon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime modifiedon
    {
        set
        {
            this[2] = value;
        }
    }
    public bool modifiedon_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class IncidentsBuffer: ScriptBuffer

{
    public IncidentsBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TicketNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TicketNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Title
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Title_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class EditContractRequestBuffer: ScriptBuffer

{
    public EditContractRequestBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RequestNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RequestNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ContractNumber
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ContractNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String CR
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CR_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IndustrialCity
    {
        set
        {
            this[3] = value;
        }
    }
    public bool IndustrialCity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RequestStatus
    {
        set
        {
            this[4] = value;
        }
    }
    public bool RequestStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RequestType
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RequestType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class ContractSubmissionBuffer: ScriptBuffer

{
    public ContractSubmissionBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String RequestNumber
    {
        set
        {
            this[0] = value;
        }
    }
    public bool RequestNumber_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String Contract
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Contract_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime CreatedOn
    {
        set
        {
            this[2] = value;
        }
    }
    public bool CreatedOn_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IndustrialCity
    {
        set
        {
            this[3] = value;
        }
    }
    public bool IndustrialCity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal InvestmentAmount
    {
        set
        {
            this[4] = value;
        }
    }
    public bool InvestmentAmount_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String IsPaymentDone
    {
        set
        {
            this[5] = value;
        }
    }
    public bool IsPaymentDone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean IsSubmitted
    {
        set
        {
            this[6] = value;
        }
    }
    public bool IsSubmitted_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ProductMainFamily
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ProductMainFamily_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RejectionReason
    {
        set
        {
            this[8] = value;
        }
    }
    public bool RejectionReason_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RequestStatus
    {
        set
        {
            this[9] = value;
        }
    }
    public bool RequestStatus_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TotalManpower
    {
        set
        {
            this[10] = value;
        }
    }
    public bool TotalManpower_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalRequestedArea
    {
        set
        {
            this[11] = value;
        }
    }
    public bool TotalRequestedArea_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}

public class HeadersBuffer: ScriptBuffer

{
    public HeadersBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String EntityFieldType
    {
        set
        {
            this[0] = value;
        }
    }
    public bool EntityFieldType_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EntityField
    {
        set
        {
            this[1] = value;
        }
    }
    public bool EntityField_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String EntityName
    {
        set
        {
            this[2] = value;
        }
    }
    public bool EntityName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public ContractBuffer ContractBuffer;

    public IncidentsBuffer IncidentsBuffer;

    public EditContractRequestBuffer EditContractRequestBuffer;

    public ContractSubmissionBuffer ContractSubmissionBuffer;

    public HeadersBuffer HeadersBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != ContractBuffer)
        {
            ContractBuffer.SetEndOfRowset();
            ContractBuffer = null;
        }

        if (null != IncidentsBuffer)
        {
            IncidentsBuffer.SetEndOfRowset();
            IncidentsBuffer = null;
        }

        if (null != EditContractRequestBuffer)
        {
            EditContractRequestBuffer.SetEndOfRowset();
            EditContractRequestBuffer = null;
        }

        if (null != ContractSubmissionBuffer)
        {
            ContractSubmissionBuffer.SetEndOfRowset();
            ContractSubmissionBuffer = null;
        }

        if (null != HeadersBuffer)
        {
            HeadersBuffer.SetEndOfRowset();
            HeadersBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Contract"))
            {
                ContractBuffer = new ContractBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Incidents"))
            {
                IncidentsBuffer = new IncidentsBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"EditContractRequest"))
            {
                EditContractRequestBuffer = new EditContractRequestBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"ContractSubmission"))
            {
                ContractSubmissionBuffer = new ContractSubmissionBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Headers"))
            {
                HeadersBuffer = new HeadersBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public IDTSConnectionManager100 EntitiesFileConn
    {
        get
        {
            return ParentComponent.ComponentMetaData.RuntimeConnectionCollection.GetRuntimeConnectionByName(@"Entities_File_Conn").ConnectionManager;
        }
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String orgURL
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["orgURL"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String password
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["password"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

    public String userName
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["userName"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8892b78662054fc0b9e8c086083c50ca.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A70947EE-752A-419F-BDF7-77096BEDC1D1}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_8892b78662054fc0b9e8c086083c50ca</RootNamespace>
    <AssemblyName>SC_8892b78662054fc0b9e8c086083c50ca</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Crm.Sdk.Proxy, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\Badr.Shahin\AppData\Local\Temp\Vsta\SSIS_SC150\VstaEId1XlhRK0SqSuAoXVt7WQ\packages\Microsoft.CrmSdk.CoreAssemblies.9.0.2.33\lib\net462\Microsoft.Crm.Sdk.Proxy.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Xrm.Sdk, Version=9.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL">
      <HintPath>C:\Users\Badr.Shahin\AppData\Local\Temp\Vsta\SSIS_SC150\VstaEId1XlhRK0SqSuAoXVt7WQ\packages\Microsoft.CrmSdk.CoreAssemblies.9.0.2.33\lib\net462\Microsoft.Xrm.Sdk.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.DirectoryServices" />
    <Reference Include="System.DirectoryServices.AccountManagement" />
    <Reference Include="System.IdentityModel" />
    <Reference Include="System.Runtime.Serialization" />
    <Reference Include="System.Security" />
    <Reference Include="System.ServiceModel" />
    <Reference Include="System.ServiceModel.Web" />
    <Reference Include="System.Web" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Reference Include="System.Xml.Linq" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_8892b78662054fc0b9e8c086083c50ca</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_8892b78662054fc0b9e8c086083c50ca</msb:DisplayName>
    <msb:ProjectId>{BCE376DC-5C41-45C7-9EAD-B8A980EBE847}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_8892b78662054fc0b9e8c086083c50ca.csproj" />
    <msb:File Include="packages.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8892b78662054fc0b9e8c086083c50ca.Properties.Settings.get_Default():SC_8892b78662054fc0b9e8c086083c50ca.Properties.Sett" +
    "ings")]

namespace SC_8892b78662054fc0b9e8c086083c50ca.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8892b78662054fc0b9e8c086083c50ca.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8892b78662054fc0b9e8c086083c50ca.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_8892b78662054fc0b9e8c086083c50ca.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_8892b78662054fc0b9e8c086083c50ca.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_8892b78662054fc0b9e8c086083c50ca.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Microsoft.CrmSdk.CoreAssemblies" version="9.0.2.33" targetFramework="net47" />
</packages>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_8892b78662054fc0b9e8c086083c50ca.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[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
mC0AAAAAgxhADQYAUACgLQAAAACTCIUM1gJQAMwtAAAAAJMI/gPcAlAA0y0AAAAAkwgKBOICUADb
LQAAAACWCKkP6QJRAOItAAAAAIYYQA0GAFEA6i0AAAAAkRhGDe4CUQCYLQAAAACGGEANBgBRAPYt
AAAAAIMAqABLAFEAAAABADUKAAABAK4QAAACABUQAAABAHECAAACAGkDAAADAGkOAAABAH4MAAAC
AI4OAAADAEILAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAH4MAAACAI4O
AAADAEILAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAH4MAAACAI4OAAADAEILAAABAG8GAAAB
AG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8G
AAABAG8GAAABAH4MAAACAI4OAAADAEILAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAAB
AG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8G
AAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAAB
AH4MAAACAI4OAAADAEILAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABAG8GAAABADIP
AAACAE0NAAADACQPAAAEAEILAAABAP8PAAABAP8PAAABAG8GAAABAEIRCQBADQEAEQBADQYAGQBA
DQoAKQBADRAAMQBADRAAOQBADRAAQQBADRAASQBADRAAUQBADRAAWQBADRAAYQBADRAAaQBADQYA
0QBADQYACQFADQYAKQFADRUAkQDICiEAAQEtBgYAcQBADRAAAQE4BgYAQQFsBAYAOQFEES8AQQF9
AzQAOQGjDzgADABADQYAOQGwEUUADADqDksAiQCPBjQADADxAVEADAAdEFcASQFhEFsADACfCwYA
FABADQYAFAAVEH8AFACoAEsAHABADYwASQHgApIAoQBADQYAoQAYA7oAWQElAxAAWQEuAhAAYQFu
CcAAcQFADRAAeQFADccAgQFADQYAgQA8BtUAmQHmAd4AoQHtEeQAoQGwEekAqQE0EfMAqQCZAjQA
OQFgD/oAsQBADRAAOQGkEUUADAAyDRoBLAAJECkBsQCGDy4BuQHzDjQBLADgEDoBwQFyBAYAgQDq
Aj4ByQEIDkcBNAAyDVkBPAAJECkByQBaDmkBRADqDksAyQBOBncB+QEPAzQAyQB6DoQBTACDCZIB
CQLgEDoBRACDCZIBEQJEBlcAGQKPBjQAIQJEBq0BKQLPBrIB2QBADbkB2QCMCcMB2QBmCQEAMQJA
DRAA2QAtEQYA2QCUDwYA2QCXDzoBAQFADQYAAQEyAc0BAQGiDtQBiQBADQYAAQGaAdoBQQKACuAB
SQI/A+YBUQKZDO0BAQFEDvIBWQKDCfgBAQEYEf8BYQLpEAUCeQLOAgwCeQJWERUCEQFADRsCMQFA
DQYAVAAVEH8AiQDODi0CLgALAB4DLgATACcDLgAbAEYDLgAjAE8DLgArAHgDLgAzAHgDLgA7AHgD
LgBDAE8DLgBLAH4DLgBTAHgDLgBbAJUDQwBjAN8DYwFzAN8DowFrAN8DIQJrAN8DKQd7AEYDSQd7
AEYDHAAmAGsAsgAAAckBAwABAAQABwAFAAsABgAXAAcALwAJADUACgA2AAsAOQAMADsAAAAJA/IC
AAC5B/YCAADxCfoCAABWCPYCAADiCfoCAABACPYCAADSC/ICAACgCPYCAAD/AvICAACoB/YCAADj
C/ICAAC4CPYCAAC/C/ICAACGCPYCAABXAfICAABOB/YCAACVEfICAABQCfYCAAA+D/ICAADqCPYC
AADmA/ICAAAUCPYCAADjC/ICAAC4CPYCAABrD/ICAAADCfYCAACgCfoCAAArCPYCAACVEfICAABQ
CfYCAAArEP8CAAAXCfYCAACrA/ICAADgB/YCAAANAvYCAAB6B/YCAABnEfICAAAzCfYCAAAYC/IC
AABrCPYCAAA+D/ICAADqCPYCAAAYDfICAADRCPYCAACHAQQDAABcB/YCAAC9A/ICAAD5B/YCAAAi
AvICAACRB/YCAABeA/ICAADKB/YCAADNCQgDAABCAfICAAA/AvICAAA2A/ICAACJDA0DAAAeBBMD
AACtDxkDAQAKAAMAAQALAAUAAQAMAAcAAQANAAkAAQAOAAsAAQAPAA0AAQAUAA8AAQAVABEAAQAW
ABMAAQAXABUAAQAcABcAAQAdABkAAQAeABsAAQAfAB0AAQAgAB8AAQAhACEAAQAiACMAAQAjACUA
AQAkACcAAQAlACkAAQAmACsAAQAnAC0AAQAsAC8AAQAtADEAAQAuADMAAQAvADUAAQAwADcAAQAx
ADkAAQAyADsAAQAzAD0AAQA0AD8AAQA1AEEAAQA2AEMAAQA3AEUAAQA4AEcAAQA5AEkAAQA6AEsA
AQA7AE0AAQA8AE8AAQA9AFEAAQA+AFMAAQA/AFUAAQBAAFcAAQBBAFkAAQBCAFsAAQBDAF0AAQBI
AF8AAQBJAGEAAQBKAGMAAQBLAGUAAQBMAGcAAQBNAGkAAgBXAGsAAgBZAG0AAgBaAG8AAgBbAHEA
AgBdAHMAAgBeAHUAAQBfAHUAAgBgAHcAPwB4AIMArwAjAVEBYgFvAYoBIwIqAgSAAAABAAAAAAAA
AAAAAAAAAF8BAAAEAAAAAAAAAAAAAAAyAsIBAAAAAA8AAAAAAAAAAAAAADsCPBAAAAAACQAAAAAA
AAAAAAAARAKcBgAAAAAPAAAAAAAAAAAAAAA7AkwLAAAAAAQAAAAAAAAAAAAAADIC2QYAAAAADwAA
AAAAAAAAAAAAOwKzEAAAAAAEAAAAAAAAAAAAAAAyApUJAAAAAAQAAAAAAAAAAAAAADIC8gMAAAAA
CQAAAAAAAAAAAAAARALzEQAAAAAEAAAAAAAAAAAAAAAyAtUOAAAAAA8AAAAAAAAAAAAAADsCbwsA
AAAAAAAAAAEAAACbDQAADQACAAAAAAALAF0BAAAAABoAXQE9AGcACgBnAEkAqgA9AKoAhQBnAIUA
fgGFAJkBhQCfAYUAowGFAKcBAAAAAABJRFRTQ29tcG9uZW50TWV0YURhdGExMDAASURUU1Zhcmlh
YmxlMTAwAElEVFNSdW50aW1lQ29ubmVjdGlvbkNvbGxlY3Rpb24xMDAASURUU1J1bnRpbWVDb25u
ZWN0aW9uMTAwAElEVFNDb25uZWN0aW9uTWFuYWdlcjEwMABJRFRTVmFyaWFibGVzMTAwAElEVFNF
dmFsdWF0b3JDb250ZXh0MTAwADxHZXRQcmV2aW91c0VudGl0eT5iX18wADw+Y19fRGlzcGxheUNs
YXNzOV8wYDEASUVudW1lcmFibGVgMQBEYXRhQ29sbGVjdGlvbmAxAElFbnVtZXJhdG9yYDEATGlz
dGAxAEludDMyAEZ1bmNgMgBEYXRhQ29sbGVjdGlvbmAyADxNb2R1bGU+AEdldE91dHB1dElEAGdl
dF9vcmdVUkwAU3lzdGVtLklPAHNldF9DUgBTUgBUAFNDXzg4OTJiNzg2NjIwNTRmYzBiOWU4YzA4
NjA4M2M1MGNhAHNldF9Ub3RhbFJlcXVlc3RlZEFyZWEAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAFJl
dHJpdmVFbnRpdHlEYXRhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAGdldF9V
c2VySWQAQWRkAE1hcmtPdXRwdXRzRmluaXNoZWQAc2V0X0lzU3VibWl0dGVkAEd1aWQAc2V0X0Vu
dGl0eUZpZWxkAHNldF9QYXNzd29yZABnZXRfcGFzc3dvcmQASU9yZ2FuaXphdGlvblNlcnZpY2UA
b3JnYW5pemF0aW9uU2VydmljZQBzZXJ2aWNlAGRlZmF1bHRJbnN0YW5jZQBFbnRpdHlSZWZlcmVu
Y2UAZ2V0X01lc3NhZ2UARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBUYWtlV2hpbGUAUmV0cmlldmVNdWx0aXBsZQBzZXRfVGl0bGUAc2V0
X3RpdGxlAGdldF9OYW1lAGdldF9Vc2VyTmFtZQBzZXRfVXNlck5hbWUAZ2V0X3VzZXJOYW1lAEdl
dFJ1bnRpbWVDb25uZWN0aW9uQnlOYW1lAHNldF9FbnRpdHlOYW1lAGVudGl0eU5hbWUARGF0ZVRp
bWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAc2V0X0lzUGF5bWVu
dERvbmUAc2V0X0VudGl0eUZpZWxkVHlwZQBTZWN1cml0eVByb3RvY29sVHlwZQBzZXRfUmVxdWVz
dFR5cGUAU3lzdGVtLkNvcmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAFF1ZXJ5QmFzZQBXaG9BbUlSZXNwb25zZQBPcmdhbml6
YXRpb25SZXNwb25zZQBDbG9zZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVy
R2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJs
ZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0
ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNz
ZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUA
Q29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUA
QXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRB
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAZ2V0X1ZhbHVlAEdldEF0dHJpYnV0ZVZhbHVl
AE9wdGlvblNldFZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcA
VXJpAE1pY3Jvc29mdC5Ycm0uU2RrAFVzZXJOYW1lUGFzc3dvcmRDbGllbnRDcmVkZW50aWFsAFRv
RGVjaW1hbABTeXN0ZW0uU2VydmljZU1vZGVsAFN5c3RlbS5Db2xsZWN0aW9ucy5PYmplY3RNb2Rl
bABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfODg5MmI3ODY2MjA1NGZjMGI5ZThjMDg2MDgzYzUw
Y2EuZGxsAHNldF9DUl9Jc051bGwAc2V0X1RvdGFsUmVxdWVzdGVkQXJlYV9Jc051bGwAc2V0X0lz
U3VibWl0dGVkX0lzTnVsbABzZXRfRW50aXR5RmllbGRfSXNOdWxsAHNldF9UaXRsZV9Jc051bGwA
c2V0X3RpdGxlX0lzTnVsbABzZXRfRW50aXR5TmFtZV9Jc051bGwAc2V0X0lzUGF5bWVudERvbmVf
SXNOdWxsAHNldF9FbnRpdHlGaWVsZFR5cGVfSXNOdWxsAHNldF9SZXF1ZXN0VHlwZV9Jc051bGwA
c2V0X0NyZWF0ZWRPbl9Jc051bGwAc2V0X21vZGlmaWVkb25fSXNOdWxsAHNldF9jcmVhdGVkb25f
SXNOdWxsAHNldF9SZWplY3Rpb25SZWFzb25fSXNOdWxsAHNldF9Db250cmFjdE51bWJlcl9Jc051
bGwAc2V0X1RpY2tldE51bWJlcl9Jc051bGwAc2V0X1JlcXVlc3ROdW1iZXJfSXNOdWxsAHNldF9U
b3RhbE1hbnBvd2VyX0lzTnVsbABzZXRfUmVxdWVzdFN0YXR1c19Jc051bGwAc2V0X0NvbnRyYWN0
X0lzTnVsbABzZXRfSW52ZXN0bWVudEFtb3VudF9Jc051bGwAc2V0X1Byb2R1Y3RNYWluRmFtaWx5
X0lzTnVsbABzZXRfSW5kdXN0cmlhbENpdHlfSXNOdWxsAFNldE51bGwAc2V0X1NlY3VyaXR5UHJv
dG9jb2wAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHNldF9DcmVhdGVkT24AcmVzb3VyY2VNYW4A
Qm9vbGVhbgBTY3JpcHRNYWluAGdldF9FbnRpdGllc0ZpbGVDb25uAHNldF9tb2RpZmllZG9uAHNl
dF9jcmVhdGVkb24AUXVlcnlFeHByZXNzaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5H
bG9iYWxpemF0aW9uAFRyYW5zYWN0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEF0dHJpYnV0ZUNvbGxl
Y3Rpb24ARm9ybWF0dGVkVmFsdWVDb2xsZWN0aW9uAGdldF9SdW50aW1lQ29ubmVjdGlvbkNvbGxl
Y3Rpb24ARW50aXR5Q29sbGVjdGlvbgBFbnRpdGllc0ZpbGVDb25uZWN0aW9uAEFjcXVpcmVDb25u
ZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3lzdGVtLlNlcnZpY2VNb2RlbC5EZXNj
cmlwdGlvbgBzZXRfUmVqZWN0aW9uUmVhc29uAEN1bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0
cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdyYXAATWljcm9zb2Z0LlNxbFNl
cnZlci5EVFNQaXBlbGluZVdyYXAAU3lzdGVtLkxpbnEAQ2xlYXIAQ29ubmVjdENSTVVzaW5nT3Jn
U2VyAHNldF9Db250cmFjdE51bWJlcgBzZXRfVGlja2V0TnVtYmVyAHNldF9SZXF1ZXN0TnVtYmVy
AFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAFBpcGVsaW5lQnVmZmVyAENvbnRyYWN0U3VibWlzc2lv
bkJ1ZmZlcgBIZWFkZXJzQnVmZmVyAEluY2lkZW50c0J1ZmZlcgBDb250cmFjdEJ1ZmZlcgBTY3Jp
cHRCdWZmZXIARWRpdENvbnRyYWN0UmVxdWVzdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdl
dF9Db25uZWN0aW9uTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlJ1bnRpbWUuV3JhcHBlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZS5X
cmFwcGVyAHNldF9Ub3RhbE1hbnBvd2VyAElFbnVtZXJhdG9yAEdldEVudW1lcmF0b3IALmN0b3IA
LmNjdG9yAE91dHB1dElEcwBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGls
ZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzg4OTJiNzg2NjIwNTRmYzBiOWU4YzA4NjA4
M2M1MGNhLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBNaWNy
b3NvZnQuQ3JtLlNkay5NZXNzYWdlcwBnZXRfRW50aXRpZXMAU0NfODg5MmI3ODY2MjA1NGZjMGI5
ZThjMDg2MDgzYzUwY2EuUHJvcGVydGllcwBnZXRfUmVhZE9ubHlWYXJpYWJsZXMAZ2V0X0F0dHJp
YnV0ZXMAZW50aXR5QXR0cmlidXRlcwBnZXRfRm9ybWF0dGVkVmFsdWVzAEJ1ZmZlckNvbHVtbklu
ZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBDbGllbnRDcmVkZW50aWFscwBFcXVhbHMA
U3lzdGVtLldpbmRvd3MuRm9ybXMAQ29udGFpbnMAQWRkQ29sdW1ucwBTeXN0ZW0uQ29sbGVjdGlv
bnMAQWNxdWlyZUNvbm5lY3Rpb25zAEJ1ZmZlcnMARmluaXNoT3V0cHV0cwBzZXRfUmVxdWVzdFN0
YXR1cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABzZXRfQ29udHJhY3QAT2JqZWN0AFN5c3Rl
bS5OZXQAZ2V0X0NvbHVtblNldABTZXRFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABEaWFs
b2dSZXN1bHQATWljcm9zb2Z0LlhybS5TZGsuQ2xpZW50AFVzZXJDb21wb25lbnQAUGFyZW50Q29t
cG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABjdXJyZW50AGdldF9Db3VudABzZXRf
SW52ZXN0bWVudEFtb3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AENvbnZlcnQATGFz
dABXaG9BbUlSZXF1ZXN0AE9yZ2FuaXphdGlvblJlcXVlc3QARW50aXRpZXNOYW1lTGlzdABFbnRp
dHlBdHRyaWJ1dGVzTGlzdABsaXN0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBy
aW1lT3V0cHV0AE1vdmVOZXh0AEdldFZhbHVlV2l0aENvbnRleHQAU2NyaXB0Q29tcG9uZW50RXZh
bENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93AFNob3cATWVzc2FnZUJveABUb0No
YXJBcnJheQBNb25leQBnZXRfQXNzZW1ibHkAc2V0X1Byb2R1Y3RNYWluRmFtaWx5AE1pY3Jvc29m
dC5Ycm0uU2RrLlF1ZXJ5AHNldF9JbmR1c3RyaWFsQ2l0eQBvcF9FcXVhbGl0eQBvcF9JbmVxdWFs
aXR5AFN5c3RlbS5TZXJ2aWNlTW9kZWwuU2VjdXJpdHkAR2V0UHJldmlvdXNFbnRpdHkARW1wdHkA
TWljcm9zb2Z0LkNybS5TZGsuUHJveHkAT3JnYW5pemF0aW9uU2VydmljZVByb3h5AAADLAAAAQBN
QwBvAG4AbgBlAGMAdABpAG8AbgAgAEUAcwB0AGEAYgBsAGkAcwBoAGUAZAAgAFMAdQBjAGMAZQBz
AHMAZgB1AGwAbAB5AC4ALgAuAABHRgBhAGkAbABlAGQAIAB0AG8AIABFAHMAdABhAGIAbABpAHMA
aABlAGQAIABDAG8AbgBuAGUAYwB0AGkAbwBuACEAIQAhAAAnRQB4AGMAZQBwAHQAaQBvAG4AIABj
AGEAdQBnAGgAdAAgAC0AIAABIWwAZAB2AF8AZQBkAGkAdABjAG8AbgB0AHIAYQBjAHQAABFsAGQA
dgBfAG4AYQBtAGUAACVsAGQAdgBfAGMAbwBuAHQAcgBhAGMAdABuAHUAbQBiAGUAcgAADWwAZAB2
AF8AYwByAAAlbABkAHYAXwBpAG4AZAB1AHMAdAByAGkAYQBsAGMAaQB0AHkAACNsAGQAdgBfAHIA
ZQBxAHUAZQBzAHQAcwB0AGEAdAB1AHMAAB9sAGQAdgBfAHIAZQBxAHUAZQBzAHQAdAB5AHAAZQAA
LWwAZAB2AF8AYwBvAG4AdAByAGEAYwB0AHMAdQBiAG0AaQBzAHMAaQBvAG4AABNjAHIAZQBhAHQA
ZQBkAG8AbgAAGWwAZAB2AF8AYwBvAG4AdAByAGEAYwB0AAArbABkAHYAXwBwAHIAbwBkAHUAYwB0
AG0AYQBpAG4AZgBhAG0AaQBsAHkAACtsAGQAdgBfAHIAZQBqAGUAYwB0AGkAbwBuAHIAZQBhAHMA
bwBuAGkAZAAAI2wAZAB2AF8AdABvAHQAYQBsAG0AYQBuAHAAbwB3AGUAcgAAI2wAZAB2AF8AaQBz
AHAAYQB5AG0AZQBuAHQAZABvAG4AZQAAH2wAZAB2AF8AaQBzAHMAdQBiAG0AaQB0AHQAZQBkAAAt
bABkAHYAXwB0AG8AdABhAGwAcgBlAHEAdQBlAHMAdABlAGQAYQByAGUAYQAAKWwAZAB2AF8AaQBu
AHYAZQBzAHQAbQBlAG4AdABhAG0AbwB1AG4AdAAAEWkAbgBjAGkAZABlAG4AdAAAGXQAaQBjAGsA
ZQB0AG4AdQBtAGIAZQByAAALdABpAHQAbABlAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIA
dAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBz
AHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkA
bgBzAHQAZQBhAGQALgAAEUMAbwBuAHQAcgBhAGMAdAAAE0kAbgBjAGkAZABlAG4AdABzAAAnRQBk
AGkAdABDAG8AbgB0AHIAYQBjAHQAUgBlAHEAdQBlAHMAdAAAJUMAbwBuAHQAcgBhAGMAdABTAHUA
YgBtAGkAcwBzAGkAbwBuAAAPSABlAGEAZABlAHIAcwAAJUUAbgB0AGkAdABpAGUAcwBfAEYAaQBs
AGUAXwBDAG8AbgBuAAANbwByAGcAVQBSAEwAABFwAGEAcwBzAHcAbwByAGQAABF1AHMAZQByAE4A
YQBtAGUAAHFTAEMAXwA4ADgAOQAyAGIANwA4ADYANgAyADAANQA0AGYAYwAwAGIAOQBlADgAYwAw
ADgANgAwADgAMwBjADUAMABjAGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAAAA4MtRih6vpUCtmGrqXEd3LQAEIAEBCAMgAAEFIAEBEREEIAEBDgYgAQERgJEEBwES
SQQgARwcCAcEDh0OHQMOBCAAHQMDIAAOBiABHQ4dAwUVEj0BDgUAAgIODgUgAQITAAUgAQETAAMg
AAgLEAEBHgAVEk0BHgADCgEODAcDFRI0AR4AHgAeAAYVEjQBHgADBhMACBUSgKkCHgACBSACARwY
FxABAhUSTQEeABUSTQEeABUSgKkCHgACBAoBHgACHgAHBwMOElESVQUgABKArQYAAQERgLUNIAQB
EoC5EoC5ElESUQggARKAxRKAyQUgABGA0QQGEYDRCQACAhGA0RGA0QYAARGA2Q4FAAIODg4ZBwoS
WRURXQEODhUSYQESZRJlDhJlCA4SZQggABURXQETAAUVEV0BDgQgABMABSAAEoDdBSABAR0OAyAA
AgggARKA5RKA6QkgABUSgO0BEmUHFRKA8QESZQggABUSYQETAAYVEmEBEmUFIAASgPUHFRKA+QIO
HAYwAQEeAA4FCgESgP0FIAASgQEHFRKA+QIODgYgARMBEwAFCgESgQkDCgECAwoBCAUKARKBEQQg
ABF9BgABEX0RfQkgAwEScR0IEnUFIAIBCBwDBwEIBgACCBJ1DgUgAR0ICAUgABKBIQUgABKBJQYg
ARKBKQ4EIAASSQUgABKBLQYgARKBMRwFAAASgTUGIAEcEoE5CAABEoE9EYFBBSAAEoFFByACAQ4S
gUUGFRI0ARMAAhMABCABAhwIt3pcVhk04IkIiYRdzYCAzJEIMb84Vq02TjUDBhI5AgYOBgYVEj0B
DgMGEkEDBhIkAwYSKAMGEgwDBhIQAwYSFAMGEhgDBhIcBAYSgIEEBhKAiQQGEoCNAwYSMAQgAQEc
DRABAh4AFRJNAR4AHgAEIAASQQsgAwESQQ4VEj0BDgQgAQECBSABARF5BSABARF9CyAEAQgdCB0S
cRJ1BiABARKAgQUAABKAiQUAABKAjQYAAQESgI0EAAASMAMAAAEDKAAOAygAAgQoABF5BCgAEX0D
KAAIBCgAEkkFCAASgIkFCAASgI0ECAASMAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU0NfODg5MmI3ODY2MjA1NGZjMGI5ZThjMDg2MDgzYzUwY2EA
AAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMQAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12
NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAACIXAAAAAAAAAAAAACiXAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlFwAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAAAAAAAAAA
AAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADsAwAAAAAAAAAAAADs
AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEAAAAAAAAA
AQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBsAGUASQBu
AGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAETAMAAAEAUwB0AHIA
aQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAKAMAAAEAMAAwADAAMAAwADQAYgAwAAAAGgABAAEAQwBv
AG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAAAAAAHAA
JAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA4ADgAOQAyAGIANwA4
ADYANgAyADAANQA0AGYAYwAwAGIAOQBlADgAYwAwADgANgAwADgAMwBjADUAMABjAGEAAAAwAAgA
AQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABwACgAAQBJAG4AdABl
AHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADgAOAA5ADIAYgA3ADgANgA2ADIAMAA1ADQAZgBjADAA
YgA5AGUAOABjADAAOAA2ADAAOAAzAGMANQAwAGMAYQAuAGQAbABsAAAASAASAAEATABlAGcAYQBs
AEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAxAAAA
KgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBn
AGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOAA4ADkAMgBiADcAOAA2ADYAMgAwADUA
NABmAGMAMABiADkAZQA4AGMAMAA4ADYAMAA4ADMAYwA1ADAAYwBhAC4AZABsAGwAAABoACQAAQBQ
AHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADgAOAA5ADIAYgA3ADgANgA2ADIAMAA1ADQA
ZgBjADAAYgA5AGUAOABjADAAOAA2ADAAOAAzAGMANQAwAGMAYQAAADQACAABAFAAcgBvAGQAdQBj
AHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgAAQBBAHMAcwBlAG0AYgBsAHkA
IABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAAtDwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_8892b78662054fc0b9e8c086083c50ca</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::orgURL,User::password,User::userName</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">93</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Export CRM Data\Get Data from CRM.Connections[Entities_File_Conn]"
                  connectionManagerID="Package.ConnectionManagers[EntitiesConnection]"
                  connectionManagerRefId="Package.ConnectionManagers[EntitiesConnection]"
                  name="Entities_File_Conn" />
              </connections>
              <outputs>
                <output
                  refId="Package\Export CRM Data\Get Data from CRM.Outputs[Contract]"
                  hasSideEffects="true"
                  name="Contract">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Contract].Columns[title]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Contract].Columns[title]"
                      name="title" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Contract].Columns[createdon]"
                      dataType="date"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Contract].Columns[createdon]"
                      name="createdon" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Contract].Columns[modifiedon]"
                      dataType="date"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Contract].Columns[modifiedon]"
                      name="modifiedon" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Get Data from CRM.Outputs[Incidents]"
                  hasSideEffects="true"
                  name="Incidents">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Incidents].Columns[Ticket_Number]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Incidents].Columns[Ticket_Number]"
                      name="Ticket_Number" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Incidents].Columns[Title]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Incidents].Columns[Title]"
                      name="Title" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest]"
                  hasSideEffects="true"
                  name="EditContractRequest">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestNumber]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestNumber]"
                      name="RequestNumber" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[ContractNumber]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[ContractNumber]"
                      name="ContractNumber" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[CR]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[CR]"
                      name="CR" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[IndustrialCity]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[IndustrialCity]"
                      name="IndustrialCity" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestStatus]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestStatus]"
                      name="RequestStatus" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestType]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest].Columns[RequestType]"
                      name="RequestType" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission]"
                  hasSideEffects="true"
                  name="ContractSubmission">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestNumber]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestNumber]"
                      name="RequestNumber" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[Contract]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[Contract]"
                      name="Contract" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[CreatedOn]"
                      dataType="date"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[CreatedOn]"
                      name="CreatedOn" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IndustrialCity]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IndustrialCity]"
                      name="IndustrialCity" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[InvestmentAmount]"
                      dataType="cy"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[InvestmentAmount]"
                      name="InvestmentAmount" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IsPaymentDone]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IsPaymentDone]"
                      name="IsPaymentDone" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IsSubmitted]"
                      dataType="bool"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[IsSubmitted]"
                      name="IsSubmitted" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[ProductMainFamily]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[ProductMainFamily]"
                      name="ProductMainFamily" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RejectionReason]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RejectionReason]"
                      name="RejectionReason" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestStatus]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[RequestStatus]"
                      name="RequestStatus" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[TotalManpower]"
                      dataType="wstr"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[TotalManpower]"
                      name="TotalManpower" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[TotalRequestedArea]"
                      dataType="i4"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission].Columns[TotalRequestedArea]"
                      name="TotalRequestedArea" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Export CRM Data\Get Data from CRM.Outputs[Headers]"
                  hasSideEffects="true"
                  name="Headers">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Headers].Columns[EntityFieldType]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Headers].Columns[EntityFieldType]"
                      name="EntityFieldType" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Headers].Columns[EntityField]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Headers].Columns[EntityField]"
                      name="EntityField" />
                    <outputColumn
                      refId="Package\Export CRM Data\Get Data from CRM.Outputs[Headers].Columns[EntityName]"
                      codePage="1252"
                      dataType="str"
                      length="1500"
                      lineageId="Package\Export CRM Data\Get Data from CRM.Outputs[Headers].Columns[EntityName]"
                      name="EntityName" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Export CRM Data.Paths[ContractSubmission]"
              endId="Package\Export CRM Data\Check whether the contract submission exists or not.Inputs[Lookup Input]"
              name="ContractSubmission"
              startId="Package\Export CRM Data\Get Data from CRM.Outputs[ContractSubmission]" />
            <path
              refId="Package\Export CRM Data.Paths[EditContractRequest]"
              endId="Package\Export CRM Data\Check whether the edit contract request exists or not.Inputs[Lookup Input]"
              name="EditContractRequest"
              startId="Package\Export CRM Data\Get Data from CRM.Outputs[EditContractRequest]" />
            <path
              refId="Package\Export CRM Data.Paths[Lookup No Match Output]"
              endId="Package\Export CRM Data\Edit Contract Request Table.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Export CRM Data\Check whether the edit contract request exists or not.Outputs[Lookup No Match Output]" />
            <path
              refId="Package\Export CRM Data.Paths[Lookup No Match Output1]"
              endId="Package\Export CRM Data\Contract Submission Table.Inputs[OLE DB Destination Input]"
              name="Lookup No Match Output"
              startId="Package\Export CRM Data\Check whether the contract submission exists or not.Outputs[Lookup No Match Output]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="159.5,42"
          Id="Package\Export CRM Data"
          TopLeft="283,102" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Export CRM Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="210.5,42"
          Id="Package\Export CRM Data\Edit Contract Request Table"
          TopLeft="97.5,240" />
        <NodeLayout
          Size="170.5,42"
          Id="Package\Export CRM Data\Get Data from CRM"
          TopLeft="280.5,39" />
        <NodeLayout
          Size="204,42"
          Id="Package\Export CRM Data\Contract Submission Table"
          TopLeft="456.5,237.5" />
        <NodeLayout
          Size="325.5,42"
          Id="Package\Export CRM Data\Check whether the contract submission exists or not"
          TopLeft="398.5,145" />
        <NodeLayout
          Size="329.5,42"
          Id="Package\Export CRM Data\Check whether the edit contract request exists or not"
          TopLeft="40.5,147" />
        <EdgeLayout
          Id="Package\Export CRM Data.Paths[Lookup No Match Output1]"
          TopLeft="559.875,187">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.5"
              Start="0,0"
              End="0,43">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,15.6953125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export CRM Data.Paths[Lookup No Match Output]"
          TopLeft="204,189">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-55.80638671875,15.9453125,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export CRM Data.Paths[EditContractRequest]"
          TopLeft="338.666666666667,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-133.416666666667,66"
              Start="0,0"
              End="-133.416666666667,58.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.7681580476467" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.7681580476467"
                    Point2="0,26.7681580476467"
                    Point3="-4,26.7681580476467" />
                  <mssgle:LineSegment
                    End="-129.416666666667,26.7681580476467" />
                  <mssgle:CubicBezierSegment
                    Point1="-129.416666666667,26.7681580476467"
                    Point2="-133.416666666667,26.7681580476467"
                    Point3="-133.416666666667,30.7681580476467" />
                  <mssgle:LineSegment
                    End="-133.416666666667,58.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-112.119720052083,31.7681580476467,90.8227734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Export CRM Data.Paths[ContractSubmission]"
          TopLeft="365.75,81">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="195.5,64"
              Start="0,0"
              End="195.5,56.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28" />
                  <mssgle:CubicBezierSegment
                    Point1="0,28"
                    Point2="0,32"
                    Point3="4,32" />
                  <mssgle:LineSegment
                    End="191.5,32" />
                  <mssgle:CubicBezierSegment
                    Point1="191.5,32"
                    Point2="195.5,32"
                    Point3="195.5,36" />
                  <mssgle:LineSegment
                    End="195.5,56.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="53.850546875,37,87.79890625,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Export CRM Data\Check whether the edit contract request exists or not">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string">[dbo].[EditContractRequest]</Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export CRM Data\Check whether the contract submission exists or not">
    <Properties>
      <Property>
        <Name>OverwriteParamsSQLProp</Name>
        <Value
          type="q2:string">false</Value>
      </Property>
      <Property>
        <Name>UsedTableName</Name>
        <Value
          type="q3:string"></Value>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q4:string">0</Value>
      </Property>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export CRM Data\Contract Submission Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Export CRM Data\Edit Contract Request Table">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>